function operationInfo() {let div = document.createElement('div');div.className = 'flex flex-col w-full h-full p-12 space-y-6 rounded-2xl shadow-2xl bg-body-0 dark:bg-body-1';let p = document.createElement('p');p.className = 'text-3xl font-bold';p.textContent = '        Funcionamiento';div.appendChild(p);let section = document.createElement('section');section.className = 'overflow-y-auto text-lg text-justify';let p0 = document.createElement('p');p0.textContent = '            IPN-Scheduler es una aplicación que ayuda a los usuarios a generar horarios de clases al minimizar la cantidad de espacios entre clases e intentando mantener los horarios con mayor preferencia. La aplicación funciona de la siguiente forma:';section.appendChild(p0);let br = document.createElement('br');section.appendChild(br);let ol = document.createElement('ol');ol.className = 'list-decimal pl-8';let li = document.createElement('li');li.textContent = '                El usuario ingresa la información sobre las clases que desea tomar, incluyendo sus preferencias por cada una y la cantidad de clases que quiere en su horario.';ol.appendChild(li);let li1 = document.createElement('li');li1.textContent = '                La aplicación utiliza el dispositivo del usuario para generar números enteros pseudo-aleatorios dentro de un rango específico. Esto le permite probar múltiples combinaciones de horarios al mismo tiempo, una combinación se le denomina como individuo.';ol.appendChild(li1);let li2 = document.createElement('li');li2.textContent = '                Previo a la generación de los horarios, la aplicación intentará buscar el mínimo óptimo entre todas las combinaciones, a los conjuntos de combinaciones se le denomina poblaciones.';ol.appendChild(li2);let li3 = document.createElement('li');li3.textContent = '                Para cada combinación, la aplicación verifica los espacios libres disponibles y selecciona los horarios que tienen la menor cantidad de espacios libres.';ol.appendChild(li3);let li4 = document.createElement('li');li4.textContent = '                Al mismo tiempo, la aplicación intenta maximizar la preferencia del usuario por los horarios de las clases.';ol.appendChild(li4);let li5 = document.createElement('li');li5.textContent = '                Después de probar miles de combinaciones, la aplicación presenta al usuario los mejores horarios posibles.';ol.appendChild(li5);section.appendChild(ol);let br6 = document.createElement('br');section.appendChild(br6);let article = document.createElement('article');article.className = 'space-y-2';let p7 = document.createElement('p');p7.className = 'text-2xl font-bold';p7.textContent = '                Explicación técnica';article.appendChild(p7);let p8 = document.createElement('p');p8.textContent = '                En términos más técnicos, la aplicación define una función “dificultad del semestre”. Para comprender mejor necesitamos definir algunas variables y funciones:';article.appendChild(p8);let ol9 = document.createElement('ol');ol9.className = 'list-decimal pl-8';let li10 = document.createElement('li');li10.textContent = '                    x es un identificador que se le da a los horarios automáticamente de forma incremental. Por ejemplo todos los horarios que tengan clases el Lunes a las 07:00, Martes a las 08:30 y Jueves a las 07:00 compartirán el mismo identificador.';ol9.appendChild(li10);let li11 = document.createElement('li');li11.textContent = '                    hK es la cantidad de horas muertas entre clases para K = 0 (lun), 1 (mar), 2 (mie), ..., 4 (vie)';ol9.appendChild(li11);let li12 = document.createElement('li');li12.textContent = '                    p es un valor que cuantifica la preferencia del usuario por una clase con un horario y profesor específico. Por ejemplo "Fuertemente preferido" = 0, "Preferentemente Evitar" = 3...';ol9.appendChild(li12);let li13 = document.createElement('li');li13.textContent = '                    g(x) es una “función” multivaluada que toma como parámetro un identificador de horario y devuelve de forma aleatoria un valor p.';ol9.appendChild(li13);article.appendChild(ol9);let p14 = document.createElement('p');p14.textContent = '                La función “dificultad del semestre” se define como:';article.appendChild(p14);let p15 = document.createElement('p');p15.className = 'text-center';p15.textContent = '                f(x0, x1, x2, …, xN) = g(x0) + g(x1) + g(x2) + ... + g(xN) + h0 + h1 + h2 + h3 + h4';article.appendChild(p15);let p16 = document.createElement('p');p16.className = 'text-center';p16.textContent = '                donde xN son los identificadores de horarios seleccionados aleatoriamente; N lo define el usuario como "materias por horario".';article.appendChild(p16);let p17 = document.createElement('p');p17.textContent = '                A su vez, esta función esta sujeta a una restricción: todos los xN deben ser diferentes, en otras palabras, no puede haber horarios repetidos. Con este modelado la aplicación intentará buscar un mínimo óptimo para f a la “fuerza bruta” probando miles de combinaciones. Por mínimo óptimo se entiende el valor entero numérico más pequeño que soluciona el problema o disminuye la “dificultad del semestre”.';article.appendChild(p17);section.appendChild(article);div.appendChild(section);div.id = 'data_container';document.getElementById('data_container').replaceWith(div);}