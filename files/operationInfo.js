function operationInfo() {const e0 = document.createElement('div');e0.setAttribute('class', "flex flex-col w-full h-full p-6 lg:p-12 space-y-3 lg:space-y-6 rounded-2xl shadow-2xl bg-body-0 dark:bg-body-1");const e1 = document.createElement('p');e1.setAttribute('class', "text-2xl lg:text-3xl font-bold");e0.appendChild(e1);e1.appendChild(document.createTextNode('Funcionamiento'));const e2 = document.createElement('section');e2.setAttribute('class', "overflow-y-auto text-lg text-justify");e0.appendChild(e2);const e3 = document.createElement('p');e2.appendChild(e3);e3.appendChild(document.createTextNode('IPN-Scheduler es una aplicación que ayuda a los usuarios a generar horarios de clases al minimizar la cantidad de espacios entre clases e intentando mantener los horarios con mayor preferencia. La aplicación funciona de la siguiente forma:'));const e4 = document.createElement('br');e2.appendChild(e4);const e5 = document.createElement('ol');e5.setAttribute('class', "list-decimal pl-8");e2.appendChild(e5);const e6 = document.createElement('li');e5.appendChild(e6);e6.appendChild(document.createTextNode('El usuario ingresa la información sobre las clases que desea tomar, incluyendo sus preferencias por cada una y la cantidad de clases que quiere en su horario.'));const e7 = document.createElement('li');e5.appendChild(e7);e7.appendChild(document.createTextNode('La aplicación utiliza el dispositivo del usuario para generar números enteros pseudo-aleatorios dentro de un rango específico. Esto le permite probar múltiples combinaciones de horarios al mismo tiempo, a una combinación se le denomina como individuo.'));const e8 = document.createElement('li');e5.appendChild(e8);e8.appendChild(document.createTextNode('Previo a la generación de los horarios, la aplicación intentará buscar el horario óptimo, entre todas las combinaciones; A los conjuntos de combinaciones se le denomina poblaciones.'));const e9 = document.createElement('li');e5.appendChild(e9);e9.appendChild(document.createTextNode('Para cada combinación, la aplicación verifica los espacios libres disponibles y selecciona los horarios que tienen la menor cantidad de espacios libres.'));const e10 = document.createElement('li');e5.appendChild(e10);e10.appendChild(document.createTextNode('Al mismo tiempo, la aplicación intenta maximizar la preferencia del usuario por los horarios de las clases.'));const e11 = document.createElement('li');e5.appendChild(e11);e11.appendChild(document.createTextNode('Después de probar miles de combinaciones, la aplicación presenta al usuario los mejores horarios posibles.'));const e12 = document.createElement('br');e2.appendChild(e12);const e13 = document.createElement('article');e13.setAttribute('class', "space-y-2");e2.appendChild(e13);const e14 = document.createElement('p');e14.setAttribute('class', "text-2xl font-bold");e13.appendChild(e14);e14.appendChild(document.createTextNode('Explicación técnica'));const e15 = document.createElement('p');e13.appendChild(e15);e15.appendChild(document.createTextNode('En términos más técnicos, la aplicación define una función “dificultad del semestre”. Para comprender mejor necesitamos definir algunas variables y funciones:'));const e16 = document.createElement('ol');e16.setAttribute('class', "list-decimal pl-8");e13.appendChild(e16);const e17 = document.createElement('li');e16.appendChild(e17);e17.appendChild(document.createTextNode('x es un identificador que se le da a los horarios automáticamente de forma incremental. Por ejemplo todos los horarios que tengan clases el Lunes a las 07:00, Martes a las 08:30 y Jueves a las 07:00 compartirán el mismo identificador.'));const e18 = document.createElement('li');e16.appendChild(e18);e18.appendChild(document.createTextNode('hK es la cantidad de horas muertas entre clases para K = 0 (lun), 1 (mar), 2 (mie), ..., 4 (vie)'));const e19 = document.createElement('li');e16.appendChild(e19);e19.appendChild(document.createTextNode('p es un valor que cuantifica la preferencia del usuario por una clase con un horario y profesor específico. Por ejemplo "Fuertemente preferido" = 0, "Preferentemente Evitar" = 3...'));const e20 = document.createElement('li');e16.appendChild(e20);e20.appendChild(document.createTextNode('g(x) es una “función” multivaluada que toma como parámetro un identificador de horario y devuelve de forma aleatoria un valor p.'));const e21 = document.createElement('p');e13.appendChild(e21);e21.appendChild(document.createTextNode('La función “dificultad del semestre” se define como:'));const e22 = document.createElement('p');e22.setAttribute('class', "text-center");e13.appendChild(e22);e22.appendChild(document.createTextNode('f(x0, x1, x2, …, xN) = g(x0) + g(x1) + g(x2) + ... + g(xN) + h0 + h1 + h2 + h3 + h4'));const e23 = document.createElement('p');e23.setAttribute('class', "text-center");e13.appendChild(e23);e23.appendChild(document.createTextNode('donde xN son los identificadores de horarios seleccionados aleatoriamente; N lo define el usuario como "materias por horario".'));const e24 = document.createElement('p');e13.appendChild(e24);e24.appendChild(document.createTextNode('A su vez, esta función esta sujeta a una restricción: todos los xN deben ser diferentes, en otras palabras, no puede haber horarios repetidos. Con este modelado la aplicación intentará buscar un mínimo óptimo para f a la “fuerza bruta” probando miles de combinaciones. Por mínimo óptimo se entiende el valor entero numérico más pequeño que soluciona el problema o disminuye la “dificultad del semestre”.'));e0.setAttribute('id', 'data_container');document.getElementById('data_container').replaceWith(e0);}